{"version":3,"sources":["store/StoreContext.js","store/Store.js","api/httpsApi.js","actions/commonAction.js","actions/actionsTypes.js","components/SearchInput/SearchInput.js","components/AccordianData/AccordianData.js","containers/WrapContainer.js","containers/ApplicationContainer.js","store/UseStore.js","reducers/commonReducer.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["createContext","Store","props","rootReducer","initialState","initialValue","type","_useReducer","useReducer","_useReducer2","Object","slicedToArray","state","dispatch","react_default","a","createElement","StoreContext","Provider","value","children","route","GLOBAL_CONFIG","ROUTE","getUserListURL","API_PATH","httpApi","axios","create","defaults","timeout","TIMEOUT","Application","Promise","resolve","reject","get","then","response","catch","e","filterUserList","userList","fliteredUserList","filter","x","i","name","toLowerCase","email","searchValue","includes","toConsumableArray","openAccordianList","data","openStatus","SearchInput","onChange","labelText","handleOnChange","val","target","isValid","errorMsg","withoutValue","id","className","src","alt","concat","htmlType","OpenAccordianData","individualData","sequenceArray","sequenceLabel","objectInObject","sequenceInObject","individualValue","map","desc","indexOf","array","loopName","push","key","href","AccordianData","headerParameter","idValue","onClick","tabIndex","onKeyDown","keyCode","detectKeyCode","toString","charAt","AccordianData_OpenAccordianData","WrapContainer","ApplicationContainer","_useStore","useContext","_useStore2","common","searchInput","openUserListID","useEffect","getUserList","field","handleOnChangeTextInput","containers_WrapContainer","components_SearchInput_SearchInput","components_AccordianData_AccordianData","appData","getListStatus","successful","error","combineReducers","arguments","length","undefined","actions","objectSpread","statusCode","defineProperty","detectPathName","router","pn","window","location","pathname","replace","App","store_Store","react_router_dom","react_router","exact","path","component","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88f15fee.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\nexport default createContext()","import React, { useReducer } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport StoreContext from \"./StoreContext\"\r\n\r\nconst Store = props => {\r\n  const { rootReducer, initialValue } = props\r\n  const initialState = rootReducer(initialValue, { type: \"__INIT__\" })\r\n  const [state, dispatch] = useReducer(rootReducer, initialState)\r\n  return (\r\n    <StoreContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </StoreContext.Provider>\r\n  )\r\n}\r\n\r\nStore.propTypes = {\r\n  rootReducer: PropTypes.func,\r\n  initialValue: PropTypes.object,\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default Store","/*global GLOBAL_CONFIG */\r\nimport axios from \"axios\"\r\n\r\nconst route = GLOBAL_CONFIG.ROUTE\r\nconst getUserListURL = GLOBAL_CONFIG.API_PATH\r\nconst httpApi = axios.create()\r\nhttpApi.defaults.timeout = GLOBAL_CONFIG.TIMEOUT\r\n\r\nconst Application = {\r\n  getUserList: () => {\r\n    return new Promise((resolve, reject) => {\r\n      httpApi.get(getUserListURL).then(response => {\r\n        resolve(response)\r\n      }).catch(e => {\r\n        reject(e)\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport {\r\n  Application,\r\n  route\r\n}","import * as types from \"./actionsTypes\"\r\nimport { Application } from \"./../api/httpsApi\"\r\n\r\nexport const getUserList = (dispatch) => {\r\n  Application.getUserList().then((response) => {\r\n    dispatch({\r\n      type: types.GET_USER_LIST,\r\n      userList: response.data,\r\n      fliteredUserList: response.data\r\n    })\r\n  }).catch((e) => {\r\n    if (e.response) {\r\n      dispatch({\r\n        type: types.SET_GET_LIST_STATUS\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nexport const handleOnChangeTextInput = (field, data, dispatch, userList) => {\r\n  dispatch({\r\n    type: types.HANDLE_ON_CHANGE_TEXT_INPUT,\r\n    field,\r\n    data\r\n  })\r\n\r\n  filterUserList(data.value, dispatch, userList)\r\n}\r\n\r\nexport const filterUserList = (value, dispatch, userList) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const fliteredUserList = userList.filter(function (x, i) {\r\n    const name = x.name ? x.name.toLowerCase() : \"\"\r\n    const email = x.email ? x.email.toLowerCase() : \"\"\r\n    const searchValue = value ? value.toLowerCase() : \"\"\r\n    return name.includes(searchValue) || email.includes(searchValue)\r\n  })\r\n\r\n  dispatch({\r\n    type: types.FILTERED_USER_LIST,\r\n    fliteredUserList: [...fliteredUserList]\r\n  })\r\n}\r\n\r\nexport const openAccordianList = (data, openStatus) => {\r\n  return {\r\n    type: types.OPEN_ACCORDIAN_ID,\r\n    data,\r\n    openStatus\r\n  }\r\n}\r\n","export const GET_USER_LIST = \"GET_USER_LIST\"\r\nexport const SET_GET_LIST_STATUS = \"SET_GET_LIST_STATUS\"\r\nexport const HANDLE_ON_CHANGE_TEXT_INPUT = \"HANDLE_ON_CHANGE_TEXT_INPUT\"\r\nexport const FILTERED_USER_LIST = \"FILTERED_USER_LIST\"\r\nexport const OPEN_ACCORDIAN_ID = \"OPEN_ACCORDIAN_ID\"","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport \"./SearchInput.css\"\r\n\r\nconst SearchInput = props => {\r\n  const { value, onChange, labelText } = props\r\n  const handleOnChange = e => {\r\n    let val = e.target.value\r\n    const data = {\r\n      value: val,\r\n      isValid: true,\r\n      errorMsg: \"\"\r\n    }\r\n\r\n    onChange(data)\r\n  }\r\n  const withoutValue = value === \"\" ? \"--withoutValue\" : \"\"\r\n  let searchImage = \"./images/searchIcon.svg\"\r\n  return (\r\n    <div id=\"searchInput-container\">\r\n      <div className=\"search-icon-container\">\r\n        <img src={searchImage} alt=\"search\" />\r\n      </div>\r\n      <div className=\"searchInput-field-container\">\r\n        <label className={`searchInputLabel${withoutValue}`}>{labelText}</label>\r\n        <input\r\n          className=\"searchInput-field\"\r\n          value={value}\r\n          onChange={(e) => handleOnChange(e)}\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nSearchInput.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  labelText: PropTypes.string\r\n}\r\n\r\nexport default SearchInput","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport \"./AccordianData.css\"\r\n\r\nconst htmlType = (type) => {\r\n  let data = \"\"\r\n  switch (type) {\r\n    case \"phone\":\r\n      data = \"tel:\"\r\n      break\r\n    case \"email\":\r\n      data = \"mailto:\"\r\n      break\r\n    default:\r\n      data = \"\"\r\n      break\r\n  }\r\n  return data\r\n}\r\n\r\nconst OpenAccordianData = props => {\r\n  const { individualData, sequenceArray, sequenceLabel, objectInObject, sequenceInObject } = props\r\n  const individualValue =\r\n    sequenceArray.map((name, i) => {\r\n      let value = []\r\n      let desc = \"\"\r\n      if (objectInObject.indexOf(name) >= 0) {\r\n        const loopSequence = sequenceInObject[objectInObject.indexOf(name)].array\r\n        loopSequence.map((loopName, x) => {\r\n          value.push(\r\n            htmlType(loopName) !== \"\" ?\r\n              <a key={x} href={`${htmlType(loopName)}${individualData[name][loopName]}`} > {individualData[name][loopName]} </a> :\r\n              <div key={x} >{individualData[name][loopName]}</div>)\r\n          return value\r\n        })\r\n\r\n        desc = <div>{sequenceLabel[i]}</div>\r\n      } else {\r\n        value.push(htmlType(name) !== \"\" ?\r\n          <a key={i} href={`${htmlType(name)}${individualData[name]}`} > {individualData[name]} </a> :\r\n          <div key={i}>{individualData[name]}</div>)\r\n\r\n        desc = <div key={i}>{sequenceLabel[i]}</div>\r\n      }\r\n\r\n      return (\r\n        <div className=\"accordian-desc-value\" key={i}>\r\n          <div id=\"openAccordianData-desc\">\r\n            {desc}\r\n          </div>\r\n          <div id=\"openAccordianData-value\">\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <div className=\"openAccordianData-container\">\r\n      {individualValue}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AccordianData = props => {\r\n  const {\r\n    data,\r\n    headerParameter,\r\n    sequenceArray,\r\n    sequenceLabel,\r\n    objectInObject,\r\n    sequenceInObject,\r\n    idValue,\r\n    onClick,\r\n    openStatus\r\n  } = props\r\n\r\n  const detectKeyCode = (e, value) => {\r\n    if (e.keyCode === 13) {\r\n      onClick && onClick(value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"accordianData-full-container\">\r\n      {\r\n        data.map((individualData, i) => {\r\n          return (\r\n            <div className=\"accordianData-container\"\r\n              tabIndex=\"0\"\r\n              key={i}\r\n              onKeyDown={(e) => detectKeyCode(e, individualData.id.toString())}\r\n            >\r\n              <div\r\n                className=\"accordianData-header-container\"\r\n                onClick={() => onClick && onClick(individualData.id.toString())}\r\n              >\r\n                <div className=\"circle-icon\">\r\n                  {individualData[headerParameter].charAt(0)}\r\n                </div>\r\n                <div className=\"accordianData-header-value-container\">\r\n                  <label className=\"accordianData-header-value\">{individualData[headerParameter]}</label>\r\n                </div>\r\n                <div className={idValue === (individualData.id.toString()) && openStatus ? \"open-accordian-arrow\" : \"close-accordian-arrow\"}> &#9660; </div>\r\n              </div>\r\n\r\n              {idValue === (individualData.id.toString()) && openStatus &&\r\n                <OpenAccordianData\r\n                  individualData={individualData}\r\n                  sequenceArray={sequenceArray}\r\n                  sequenceLabel={sequenceLabel}\r\n                  objectInObject={objectInObject}\r\n                  sequenceInObject={sequenceInObject}\r\n                />\r\n              }\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div >\r\n  )\r\n}\r\n\r\nAccordianData.propTypes = {\r\n  data: PropTypes.array,\r\n  headerParameter: PropTypes.string,\r\n  sequenceArray: PropTypes.array,\r\n  sequenceLabel: PropTypes.array,\r\n  objectInObject: PropTypes.array,\r\n  sequenceInObject: PropTypes.array,\r\n  idValue: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  openStatus: PropTypes.bool\r\n}\r\n\r\nOpenAccordianData.propTypes = {\r\n  individualData: PropTypes.object,\r\n  sequenceArray: PropTypes.array,\r\n  sequenceLabel: PropTypes.array,\r\n  objectInObject: PropTypes.array,\r\n  sequenceInObject: PropTypes.array,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nexport default AccordianData","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst WrapContainer = (props) => {\r\n  return (\r\n    <div className=\"body-container\">\r\n      <div className=\"wrap-container\">\r\n        <div className=\"header\"> Contact </div>\r\n        {props.children}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nWrapContainer.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default WrapContainer","import React, { useEffect } from \"react\"\r\nimport useStore from \"./../store/UseStore\"\r\nimport { getUserList, handleOnChangeTextInput, openAccordianList } from \"./../actions/commonAction\"\r\nimport SearchInput from \"./../components/SearchInput/SearchInput\"\r\nimport AccordianData from \"./../components/AccordianData/AccordianData\"\r\nimport WrapContainer from \"./WrapContainer\"\r\n\r\nexport const ApplicationContainer = () => {\r\n  const [state, dispatch] = useStore()\r\n  const { common } = state\r\n  const { searchInput, openUserListID, fliteredUserList } = common\r\n\r\n  useEffect(() => {\r\n    if (state[\"common\"].userList === null) {\r\n      getUserList(dispatch)\r\n    }\r\n  })\r\n\r\n  const handleOnChange = (field, data) => {\r\n    handleOnChangeTextInput(field, data, dispatch, common.userList)\r\n  }\r\n\r\n  const arrayInObject = [\r\n    {\r\n      array: [\"street\", \"suite\", \"city\", \"zipcode\"]\r\n    }\r\n  ]\r\n\r\n  const onClick = (data) => {\r\n    if (common.openUserListID.id === data) {\r\n      dispatch(openAccordianList(data, !openUserListID.openStatus))\r\n    } else {\r\n      dispatch(openAccordianList(data, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <WrapContainer>\r\n      <div className=\"application-container\">\r\n        <SearchInput\r\n          labelText={\"Enter Keyword\"}\r\n          value={searchInput.value}\r\n          onChange={(data) => handleOnChange(\"searchInput\", data)}\r\n        />\r\n        <div className=\"common-separator\" />\r\n        {common.fliteredUserList !== null &&\r\n          <AccordianData\r\n            data={fliteredUserList}\r\n            headerParameter={\"name\"}\r\n            sequenceArray={[\"phone\", \"email\", \"address\"]}\r\n            sequenceLabel={[\"Mobile\", \"Email\", \"Address\"]}\r\n            objectInObject={[\"address\"]}\r\n            sequenceInObject={arrayInObject}\r\n            idValue={openUserListID.id}\r\n            openStatus={openUserListID.openStatus}\r\n            onClick={(data) => onClick(data)}\r\n          />\r\n        }\r\n\r\n      </div>\r\n    </WrapContainer>\r\n\r\n  )\r\n}","import { useContext } from \"react\"\r\nimport StoreContext from \"./StoreContext\"\r\n\r\nexport default function useStore() {\r\n  return useContext(StoreContext)\r\n}","import * as types from \"./../actions/actionsTypes\"\r\n\r\nexport const initialState = {\r\n  appData: null,\r\n  userList: null,\r\n  fliteredUserList: null,\r\n  getListStatus: {\r\n    successful: false,\r\n    error: \"\"\r\n  },\r\n  searchInput: {\r\n    name: \"searchInput\",\r\n    value: \"\",\r\n    errorMsg: \"\",\r\n    isValid: true\r\n  },\r\n  openUserListID: {\r\n    id: \"\",\r\n    openStatus: true\r\n  }\r\n}\r\n\r\nexport const commonReducer = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case types.GET_USER_LIST:\r\n      return {\r\n        ...state,\r\n        userList: actions.userList,\r\n        fliteredUserList: actions.fliteredUserList,\r\n        getListStatus: {\r\n          ...state.getListStatus,\r\n          successful: true\r\n        }\r\n      }\r\n\r\n    case types.SET_GET_LIST_STATUS:\r\n      return {\r\n        ...state,\r\n        getListStatus: {\r\n          successful: false,\r\n          error: actions.statusCode\r\n        }\r\n      }\r\n\r\n    case types.HANDLE_ON_CHANGE_TEXT_INPUT:\r\n      return {\r\n        ...state,\r\n        [actions.field]: {\r\n          ...state[actions.field],\r\n          value: actions.data.value,\r\n          errorMsg: actions.data.errorMsg,\r\n          isValid: actions.data.isValid\r\n        }\r\n      }\r\n\r\n    case types.FILTERED_USER_LIST:\r\n      return {\r\n        ...state,\r\n        fliteredUserList: actions.fliteredUserList\r\n      }\r\n\r\n    case types.OPEN_ACCORDIAN_ID:\r\n      return {\r\n        ...state,\r\n        openUserListID: { id: actions.data, openStatus: actions.openStatus }\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport * as reducer from \"./commonReducer\"\r\n\r\nexport default combineReducers({\r\n  common: reducer.commonReducer\r\n})","import React, { Component } from \"react\"\n// import { Provider } from \"react-redux\"\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\n\nimport \"./assets/applicationCss.css\"\nimport \"./App.css\"\nimport Store from \"./store/Store\"\nimport { route } from \"./api/httpsApi\"\nimport { ApplicationContainer } from \"./containers/ApplicationContainer\"\nimport rootReducer from \"./reducers/index\"\n\nexport const detectPathName = () => {\n  const router = route\n  let pn = window.location.pathname\n  return pn.replace(router.filter(a => pn.indexOf(a) !== -1)[0], \"\")\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Store rootReducer={rootReducer}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path={`${detectPathName()}`} component={ApplicationContainer} />\n          </Switch>\n        </BrowserRouter>\n      </Store>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}